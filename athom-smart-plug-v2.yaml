esphome:
  name: "athom-smart-plug-v2"
  friendly_name: "Athom Smart Plug V2"
  name_add_mac_suffix: true
  on_boot:
    - priority: 600.0
      then:
        - lambda: |-
            // Default: Connecting
            id(wifi_led_pwm).set_level(0.5);
            id(wifi_led_pwm).set_period(1000);
            id(wifi_led_pwm).turn_on();
        - script.execute: fast_reboot_factory_reset
  on_loop:
    then:
      - lambda: |-
          // Captive portal
          if(id(wifi_component).has_ap() && !id(wifi_component).has_sta()) {
            id(wifi_led_pwm).set_level(0.5);
            id(wifi_led_pwm).set_period(200);
          } else {
            id(wifi_led_pwm).set_period(1000);
            // Connected
            if(id(wifi_component).is_connected())
              id(wifi_led_pwm).set_level(1);
            // Connecting
            else
              id(wifi_led_pwm).set_level(0.5);
          }

esp8266:
  board: esp8285
  restore_from_flash: true

globals:
  - id: fast_reboot
    type: int
    restore_value: yes
    initial_value: '0'

  - id: factory_reset_reboot_counter
    type: int
    initial_value: '2'

logger:
  baud_rate: 0
  level: info

script:
  - id: fast_reboot_factory_reset
    then:
      - if:
          condition:
            lambda: return ( id(fast_reboot) >= id(factory_reset_reboot_counter) );
          then:
            - lambda: |-
                ESP_LOGI("Fast Boot Factory Reset", "Performing factotry reset");
                id(fast_reboot) = 0;
                fast_reboot->loop();
                global_preferences->sync();
            - button.press: factory_reset_button
      - lambda: |-
          if(id(fast_reboot) > 0)
            ESP_LOGI("Fast Boot Factory Reset", "Quick reboot %d/%d, do it %d more times to factory reset", id(fast_reboot), id(factory_reset_reboot_counter), id(factory_reset_reboot_counter) - id(fast_reboot));
          id(fast_reboot) += 1;
          fast_reboot->loop();
          global_preferences->sync();
      - delay: 10s
      - lambda: |-
          id(fast_reboot) = 0;
          fast_reboot->loop();
          global_preferences->sync();

wifi:
  id: wifi_component
  ap:
    ap_timeout: 0s
  reboot_timeout: 60s

captive_portal:
    
web_server:

api:
  reboot_timeout: 60s

ota:
  safe_mode: false

prometheus:

debug:
  update_interval: 5s

uart:
  rx_pin: RX
  baud_rate: 4800

binary_sensor:
  - platform: status
    name: "Status"

  - platform: gpio
    id: button_gpio
    pin:
      number: 5
      mode: INPUT_PULLUP
      inverted: true
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - switch.toggle: power_switch
      - timing:
          - ON for at least 4s
        then:
          - button.press: factory_reset_button

sensor:
  - platform: uptime
    name: "Uptime"
    update_interval: 15s

  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 15s

  - platform: debug
    free:
      name: "Debug: Heap Free"
    fragmentation:
      name: "Debug: Heap Fragmentation"
    block:
      name: "Debug: Heap Largest Contiguous Free Block"
    loop_time:
      name: "Debug: Loop Time"

  - platform: cse7766
    update_interval: 1s
    current:
      name: "Current"
      icon: mdi:current-ac
      accuracy_decimals: 5
    voltage:
      name: "Voltage"
      icon: mdi:sine-wave
      accuracy_decimals: 1
    power:
      name: "Power"
      icon: mdi:lightning-bolt-outline
      accuracy_decimals: 3
    energy:
      name: "Energy"
      icon: mdi:lightning-bolt
      accuracy_decimals: 5

output:
  - platform: slow_pwm
    id: wifi_led_pwm
    period: 1s
    pin:
      number: GPIO13
      inverted: true

switch:
  - platform: gpio
    pin: GPIO12
    name: "Power"
    id: power_switch
    icon: mdi:toggle-switch
    entity_category: ""
    device_class: outlet
    restore_mode: RESTORE_DEFAULT_OFF

button:
  - platform: factory_reset
    id: factory_reset_button
    name: "Factory Reset"

  - platform: restart
    name: "Restart"

  - platform: safe_mode
    name: "Safe Mode"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Wifi Info: IP Address"
    ssid:
      name: "Wifi Info: SSID"
    bssid:
      name: "Wifi Info: BSSID"
    mac_address:
      name: "Wifi Info: MAC Address"
    dns_address:
      name: "Wifi Info: DNS Address"

  - platform: debug
    device:
      name: "Debug: Device Info"
    reset_reason:
      name: "Debug: Reset Reason"

time:
  - platform: sntp