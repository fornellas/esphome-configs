esphome:
  name: "plug"
  friendly_name: "ESPHome > Plug"
  name_add_mac_suffix: true
  on_boot:
    - priority: 600.0
      then:
        - lambda: |-
            id(wifi_led_pwm).set_level(0.5);
            id(wifi_led_pwm).set_period(1000);
            id(wifi_led_pwm).turn_on();
        - script.execute: fast_reboot_factory_reset
  on_loop:
    then:
      - lambda: |-
          if(id(wifi_component).has_ap() && !id(wifi_component).has_sta()) {
            // Captive portal
            id(wifi_led_pwm).set_level(0.5);
            id(wifi_led_pwm).set_period(200);
          } else {
            id(wifi_led_pwm).set_period(1000);
            if(id(wifi_component).is_connected())
              id(wifi_led_pwm).set_level(1);
            else
              id(wifi_led_pwm).set_level(0.5);
          }

bk72xx:
  board: wb2s

globals:
  - id: fast_reboot
    type: int
    restore_value: yes
    initial_value: '0'

  - id: factory_reset_reboot_counter
    type: int
    initial_value: '2'

logger:

script:
  - id: fast_reboot_factory_reset
    then:
      - if:
          condition:
            lambda: return ( id(fast_reboot) >= id(factory_reset_reboot_counter) );
          then:
            - lambda: |-
                ESP_LOGD("Fast Boot Factory Reset", "Performing factotry reset");
                id(fast_reboot) = 0;
                fast_reboot->loop();
                global_preferences->sync();
            - switch.turn_on: factory_reset_switch
      - lambda: |-
          if(id(fast_reboot) > 0)
            ESP_LOGD("Fast Boot Factory Reset", "Quick reboot %d/%d, do it %d more times to factory reset", id(fast_reboot), id(factory_reset_reboot_counter), id(factory_reset_reboot_counter) - id(fast_reboot));
          id(fast_reboot) += 1;
          fast_reboot->loop();
          global_preferences->sync();
      - delay: 10s
      - lambda: |-
          id(fast_reboot) = 0;
          fast_reboot->loop();
          global_preferences->sync();

wifi:
  id: wifi_component
  ap:
    ap_timeout: 0s
  reboot_timeout: 0s

captive_portal:
    
web_server:

api:
  reboot_timeout: 0s

ota:
  safe_mode: false

prometheus:

binary_sensor:
  - platform: status
    name: "ESPHome: Status"

  - platform: gpio
    id: relay_button
    pin:
      number: P6
      inverted: true
      mode: INPUT_PULLUP
    on_press:
      then:
        - switch.toggle: relay

sensor:
  - platform: uptime
    name: 'ESPHome: Uptime'
    icon: 'mdi:timer-outline'
    update_interval: 1s

  - platform: wifi_signal
    name: "ESPHome: WiFi Signal"
    unit_of_measurement: "dB"
    id: wifi_signal_db
    update_interval: 15s
    entity_category: "diagnostic"
    icon: 'mdi:signal'

output:
  - platform: slow_pwm
    pin:
      number: P7
      inverted: true
    id: wifi_led_pwm
    period: 1s
  - platform: gpio
    pin:
      number: P8
      inverted: true
    id: relay_led

switch:
  - platform: factory_reset
    id: factory_reset_switch
    name: "ESPHome: Factory reset"
  - platform: gpio
    id: relay
    name: Relay
    pin: P24
    on_turn_on:
      - output.turn_on: relay_led
    on_turn_off:
      - output.turn_off: relay_led

button:
  - platform: restart
    name: "ESPHome: Restart"

  - platform: safe_mode
    name: "ESPHome: Safe Mode"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "ESPHome: Wifi IP Address"
    ssid:
      name: "ESPHome: Wifi Connected SSID"
    bssid:
      name: "ESPHome: Wifi Connected BSSID"
    mac_address:
      name: "ESPHome: Wifi Mac Wifi Address"
    dns_address:
      name: "ESPHome: Wifi DNS Address"