esphome:
  name: "presence"
  friendly_name: "Presence"
  name_add_mac_suffix: true
  on_boot:
    - priority: 600.0
      then:
        - lambda: |-
            // Default: Connecting
            id(wifi_led_pwm).set_level(0.5);
            id(wifi_led_pwm).set_period(1000);
            id(wifi_led_pwm).turn_on();
        - script.execute: fast_reboot_factory_reset
        - switch.turn_off: ld2410_bluetooth
        - button.press: ld2410_query_params
  on_loop:
    then:
      - lambda: |-
          // Captive portal
          if(id(wifi_component).has_ap() && !id(wifi_component).has_sta()) {
            id(wifi_led_pwm).set_level(0.5);
            id(wifi_led_pwm).set_period(200);
          } else {
            id(wifi_led_pwm).set_period(1000);
            // Connected
            if(id(wifi_component).is_connected())
              id(wifi_led_pwm).set_level(1);
            // Connecting
            else
              id(wifi_led_pwm).set_level(0.5);
          }

esp32:
  board: esp32-c3-devkitm-1

globals:
  - id: fast_reboot
    type: int
    restore_value: yes
    initial_value: '0'

  - id: factory_reset_reboot_counter
    type: int
    initial_value: '10'

logger:
  baud_rate: 0
  level: info

script:
  - id: fast_reboot_factory_reset
    then:
      - if:
          condition:
            lambda: return ( id(fast_reboot) >= id(factory_reset_reboot_counter) );
          then:
            - lambda: |-
                ESP_LOGI("Fast Boot Factory Reset", "Performing factotry reset");
                id(fast_reboot) = 0;
                fast_reboot->loop();
                global_preferences->sync();
            - button.press: factory_reset_button
      - lambda: |-
          if(id(fast_reboot) > 0)
            ESP_LOGI("Fast Boot Factory Reset", "Quick reboot %d/%d, do it %d more times to factory reset", id(fast_reboot), id(factory_reset_reboot_counter), id(factory_reset_reboot_counter) - id(fast_reboot));
          id(fast_reboot) += 1;
          fast_reboot->loop();
          global_preferences->sync();
      - delay: 10s
      - lambda: |-
          id(fast_reboot) = 0;
          fast_reboot->loop();
          global_preferences->sync();

wifi:
  id: wifi_component
  ap:
    ap_timeout: 0s
  reboot_timeout: 0s
  power_save_mode: none

captive_portal:
    
web_server:

api:
  reboot_timeout: 0s

ota:
  safe_mode: false

uart:
  baud_rate: 256000
  tx_pin: 2
  rx_pin: 1
  parity: NONE
  stop_bits: 1

i2c:
  sda: 7
  scl: 6
  scan: false

ld2410:
  id: ld2410_sensor

binary_sensor:
  - platform: status
    name: "Status"

  - platform: ld2410
    has_target:
      name: "Presence (UART)"
    has_moving_target:
      name: "Moving target"
    has_still_target:
      name: "Still target"
    out_pin_presence_status:
      name: "Out pin presence status"

  - platform: gpio
    pin: 3
    id: presence_gpio
    name: "Presence (GPIO)"
    on_press:
      then:
        - output.turn_on: presence_led
    on_release:
      then:
        - output.turn_off: presence_led

sensor:
  - platform: uptime
    name: "Uptime"
    update_interval: 15s

  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 15s

  - platform: bh1750
    name: "Illuminance"
    address: 0x23
    update_interval: 1s

  - platform: ld2410
    # Engineering Mode
    light:
      name: "Light"
    moving_distance:
      name: "Moving distance"
    still_distance:
      name: "Still distance"
    moving_energy:
      name: "Moving energy"
    still_energy:
      name: "Still energy"
    detection_distance:
      name: "Detection distance"
    g0:
      # Engineering Mode
      move_energy:
        name: "g0 move Energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g0_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g0_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g0 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g0_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g0_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g1:
      # Engineering Mode
      move_energy:
        name: "g1 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g1_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g1_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g1 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g1_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g1_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g2:
      # Engineering Mode
      move_energy:
        name: "g2 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g2_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g2_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g2 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g2_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g2_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g3:
      # Engineering Mode
      move_energy:
        name: "g3 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g3_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g3_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g3 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g3_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g3_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g4:
      # Engineering Mode
      move_energy:
        name: "g4 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g4_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g4_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g4 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g4_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g4_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g5:
      # Engineering Mode
      move_energy:
        name: "g5 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g5_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g5_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g5 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g5_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g5_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g6:
      # Engineering Mode
      move_energy:
        name: "g6 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g6_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g6_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g6 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g6_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g6_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g7:
      # Engineering Mode
      move_energy:
        name: "g7 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g7_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g7_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g7 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g7_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g7_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();
    g8:
      # Engineering Mode
      move_energy:
        name: "g8 move energy"
        on_value:
          - lambda: |-
              if (!id(ld2410_calibrate).state)
                return;
              if (x <= id(ld2410_g8_move_energy_threshold).state)
                return;
              auto call = id(ld2410_g8_move_energy_threshold).make_call();
              call.set_value(x);
              call.perform();
      # Engineering Mode
      still_energy:
        name: "g8 still energy"
        on_value:
        - lambda: |-
            if (!id(ld2410_calibrate).state)
              return;
            if (x <= id(ld2410_g8_still_energy_threshold).state)
              return;
            auto call = id(ld2410_g8_still_energy_threshold).make_call();
            call.set_value(x);
            call.perform();

output:
  - platform: slow_pwm
    id: wifi_led_pwm
    period: 1s
    pin: 5

  - platform: gpio
    pin: 4
    id: presence_led

switch:
  - platform: ld2410
    engineering_mode:
      id: ld2410_engineering_mode
      name: "Engineering mode"
      on_turn_off:
        - then:
          - switch.turn_off: ld2410_calibrate
    bluetooth:
      id: ld2410_bluetooth
      name: "Bluetooth"

  - platform: template
    name: "Calibrate idle energy thresholds"
    id: ld2410_calibrate
    entity_category: config
    restore_mode: ALWAYS_OFF
    turn_on_action:
      - then:
        - switch.turn_on: ld2410_engineering_mode
    turn_off_action:
      - then:
        - switch.turn_off: ld2410_engineering_mode
    optimistic: true

number:
  - platform: ld2410
    timeout:
      name: "Timeout"
      mode: box
    light_threshold:
      name: "Light threshold"
    max_move_distance_gate:
      name: "Max move distance gate"
    max_still_distance_gate:
      name: "Max still distance gate"
    g0:
      move_threshold:
        name: "g0 move energy threshold"
        id: ld2410_g0_move_energy_threshold
      still_threshold:
        name: "g0 still energy threshold"
        id: ld2410_g0_still_energy_threshold
    g1:
      move_threshold:
        name: "g1 move energy threshold"
        id: ld2410_g1_move_energy_threshold
      still_threshold:
        name: "g1 still energy threshold"
        id: ld2410_g1_still_energy_threshold
    g2:
      move_threshold:
        name: "g2 move energy threshold"
        id: ld2410_g2_move_energy_threshold
      still_threshold:
        name: "g2 still energy threshold"
        id: ld2410_g2_still_energy_threshold
    g3:
      move_threshold:
        name: "g3 move energy threshold"
        id: ld2410_g3_move_energy_threshold
      still_threshold:
        name: "g3 still energy threshold"
        id: ld2410_g3_still_energy_threshold
    g4:
      move_threshold:
        name: "g4 move energy threshold"
        id: ld2410_g4_move_energy_threshold
      still_threshold:
        name: "g4 still energy threshold"
        id: ld2410_g4_still_energy_threshold
    g5:
      move_threshold:
        name: "g5 move energy threshold"
        id: ld2410_g5_move_energy_threshold
      still_threshold:
        name: "g5 still energy threshold"
        id: ld2410_g5_still_energy_threshold
    g6:
      move_threshold:
        name: "g6 move energy threshold"
        id: ld2410_g6_move_energy_threshold
      still_threshold:
        name: "g6 still energy threshold"
        id: ld2410_g6_still_energy_threshold
    g7:
      move_threshold:
        name: "g7 move energy threshold"
        id: ld2410_g7_move_energy_threshold
      still_threshold:
        name: "g7 still energy threshold"
        id: ld2410_g7_still_energy_threshold
    g8:
      move_threshold:
        name: "g8 move energy threshold"
        id: ld2410_g8_move_energy_threshold
      still_threshold:
        name: "g8 still energy threshold"
        id: ld2410_g8_still_energy_threshold

button:
  - platform: restart
    name: "Restart"

  - platform: safe_mode
    name: "Safe Mode"

  - platform: factory_reset
    id: factory_reset_button
    name: "Factory Reset"

  - platform: ld2410
    factory_reset:
      name: "Factory reset"
    restart:
      id: ld2410_restart
      name: "Restart"
    query_params:
      id: ld2410_query_params
      name: "Query params"

  - platform: template
    name: "Set all move/still energy thresholds to 0%"
    entity_category: config
    icon: mdi:numeric-0-box-multiple-outline
    on_press:
      - number.set:
          id: ld2410_g0_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g0_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g1_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g1_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g2_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g2_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g3_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g3_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g4_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g4_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g5_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g5_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g6_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g6_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g7_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g7_still_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g8_move_energy_threshold
          value: 0
      - number.set:
          id: ld2410_g8_still_energy_threshold
          value: 0

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "Wifi Info: IP Address"
    ssid:
      name: "Wifi Info: SSID"
    bssid:
      name: "Wifi Info: BSSID"
    mac_address:
      name: "Wifi Info: MAC Address"
    dns_address:
      name: "Wifi Info: DNS Address"

  - platform: ld2410
    version:
      name: "Firmware version"
    mac_address:
      name: "Bluetooth MAC address"

select:
  - platform: ld2410
    distance_resolution:
      name: "Distance resolution"
    baud_rate:
      name: "Baud rate"
    light_function:
      name: "Light function"
    out_pin_level:
      name: "Out pin level"

text:
  - platform: template
    name: "Bluetooth password"
    entity_category: config
    optimistic: true
    min_length: 6
    max_length: 6
    mode: text
    on_value:
      then:
        - bluetooth_password.set:
            id: ld2410_sensor
            password: !lambda "return x;"
